{"componentChunkName":"component---src-templates-blog-post-js","path":"/190825-/","webpackCompilationHash":"1d678992db2e9bae46b5","result":{"data":{"site":{"siteMetadata":{"title":"AvidDabbler Blog","author":"Walter Jenkins"}},"markdownRemark":{"id":"a10e3215-2b59-5456-adb7-265dbb0a364c","excerpt":"Intro Getting your site hosted can be a huge hassle. There are a ton of options out there, but if you want to keep costs down choosing the next draggy droppy…","html":"<h1>Intro</h1>\n<p>Getting your site hosted can be a huge hassle. There are a ton of options out there, but if you want to keep costs down choosing the next draggy droppy solutions can get expensive and you may not want to chose a newer technology as you may have some problems (as I did) when something goes wrong. However, there is rarely the documentation that clearly spells out ONE way of doing things (but really that’s not how we learn anyway is it?).</p>\n<p>When I first started out trying to figure out how to host my portfolio site and blog I did a ton of research on how I could host the damn thing and what I wanted to do all while learning a little about hosting. The initial goals of the project were as follows:</p>\n<ol>\n<li>Host a website and do so for less than a cup of coffee a month.</li>\n<li>Allow for me to update the site through a GitHub repository.</li>\n<li>Add a custom domain.</li>\n<li>Repeat the process under a subdomain for my blog.</li>\n</ol>\n<h2>The Problems with Hosting on GitHub</h2>\n<p>While <strong><em>I know that I can host a blog and and portfolio site on GitHub pages for free</em></strong> that would defeat the purpose of the project. I also knew that I wanted to be able to attach my project to something that would allow me to grow within a platform.</p>\n<p>I had heard of a number of different options out there as far as cloud providers are concerned, but I ended up going with AWS just because it seems to be the most widely supported cloud platform and seemed like a good introductory project in getting involved into the ecosystem for hosting files.</p>\n<h2>Options within AWS</h2>\n<p>So this is probably the most frustrating part of the whole process for me. AWS has so many ways of doing things and there are so many different platforms out there that seemed great, but I eventually narrowed it down to 3 different options all of which I got to different levels of befor bailing to another, but I am proud to say that 3rd times the charm and that I am happy with my final choice.</p>\n<p>As with all technology these days there is an array of trade offs that often sound constantly like one old fable or another. <strong><em>Today’s Story is AWS and the Three Bears.</em></strong></p>\n<h3>Papa Bear Solution: EC2, Lightsail, and Apache</h3>\n<p>When I first started this process I wanted to do it all. I wanted to be up to my elbows in documentation, I wanted to host the files, manage the server, keep up with all of the dependencie. So I started working with <a href=\"https://aws.amazon.com/lightsail/\">AWS Lightsail</a>.</p>\n<p>The benefit of working with lightsail is that this solution is configured exactly the way that you like. I started off by getting the EC2 instance</p>\n<h3>Baby Bear: AWS Amplify</h3>\n<h3>Mama Bear: S3 Buckets, Cloudfront and Code</h3>\n<p>This post will go through the following steps in a logical way:</p>\n<ul>\n<li>Hosting your files through AWS s3.</li>\n<li>Connecting your files to be accessable through url via Cloudfront.</li>\n<li>Use CodeBuild to connect your files to a GitHub Repo.</li>\n<li>Configure a custom domain to your project.</li>\n</ul>\n<p><strong><em>Full Disclosure: I pulled together a number of resources for this post, but the majority of this post came from <a href=\"https://medium.com/faun/deploy-static-website-to-amazon-s3-from-github-repository-3f1245d2a780\">here</a>. I will always try to give credit where it is due and <a href=\"https://medium.com/@aashari\">Andi Ashari</a> put together a great rundown of navigating the hosting and managing a website on AWS.</em></strong></p>\n<ul>\n<li>Origin Domain Name: select our bucket generated public domain, in this case <strong><em>www.walterkjenkins.com.s3.amazonaws.com</em></strong>, but you could set it up as <strong><em>%your_site%.s3.amazonaws.com</em></strong></li>\n<li>Origin Path: leave this blank</li>\n<li>Origin ID: by default, this field will be auto-generated by CloudFront, you can custom it as you want</li>\n<li>Restrict Bucket Access: yes</li>\n<li>Origin Access Identity: Create a New Identity</li>\n<li>Comment: www.walterkjenkins.com-cloudfront</li>\n<li>Grant Read Permissions on Bucket: Yes, Update Bucket Policy</li>\n<li>Default Root Object: index.html</li>\n<li>Leave the rest filled default value</li>\n<li>Click Create Distribution</li>\n</ul>","frontmatter":{"title":"AWS and the Three Bears","date":"August 25, 2019","description":"Navigating Hosting Solutions for Static Sites on AWS"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/190825-/","previous":{"fields":{"slug":"/190817-github-portfolio-builder/"},"frontmatter":{"title":"GitHub Portfolio Builder"}},"next":null}}}